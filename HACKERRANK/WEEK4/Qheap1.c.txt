#include <stdio.h>

#define N 100005   // max heap size

int h[N];   // heap array
int n = 0;  // heap size

// swap function
void swp(int *x, int *y) {
    int t = *x;
    *x = *y;
    *y = t;
}

// insert into heap
void a(int v) {
    n++;
    h[n] = v;
    int i = n;
    while(i > 1 && h[i] < h[i/2]) {
        swp(&h[i], &h[i/2]);
        i = i/2;
    }
}

// heapify down
void f(int i) {
    int l = 2*i, r = 2*i+1, sm = i;
    if(l <= n && h[l] < h[sm]) sm = l;
    if(r <= n && h[r] < h[sm]) sm = r;
    if(sm != i) {
        swp(&h[i], &h[sm]);
        f(sm);
    }
}

// delete given value
void r(int v) {
    int i;
    for(i = 1; i <= n; i++) {
        if(h[i] == v) break;
    }
    if(i <= n) {
        h[i] = h[n];
        n--;
        while(i > 1 && h[i] < h[i/2]) {
            swp(&h[i], &h[i/2]);
            i = i/2;
        }
        f(i);
    }
}

int main() {
    int q;
    scanf("%d", &q);
    while(q--) {
        int t, x;
        scanf("%d", &t);
        if(t == 1) {
            scanf("%d", &x);
            a(x);
        } 
        else if(t == 2) {
            scanf("%d", &x);
            r(x);
        } 
        else if(t == 3) {
            printf("%d\n", h[1]);
        }
    }
    return 0;
}
